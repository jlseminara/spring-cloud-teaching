apiVersion: apps/v1
kind: Deployment
metadata:
  name: configuration-server-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: configuration-server-app
  template:
    metadata:
      labels:
        app: configuration-server-app
    spec:
      containers:
      - name: configuration-server-container
        image: configserver:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: JAVA_OPTS
          value: "-Xms256m -Xmx512m -XX:+UseG1GC -XX:+UseStringDeduplication"
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "1Gi"
            cpu: "800m"
        startupProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30      # Esperar 30 segundos antes del primer check
          periodSeconds: 10           # Verificar cada 10 segundos
          timeoutSeconds: 10          # Tiempo de espera por request
          failureThreshold: 12        # 12 fallos = 2 minutos total (30s + 12*10s = 150s)
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 0      # No delay, startupProbe ya manejó el arranque
          periodSeconds: 30           # Verificar cada 30 segundos
          timeoutSeconds: 10
          failureThreshold: 3         # 3 fallos consecutivos
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 0      # No delay, startupProbe ya manejó el arranque
          periodSeconds: 10           # Verificar cada 10 segundos
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        volumeMounts:
        - name: config-volume
          mountPath: /config-files/producer-prod.yml
          subPath: producer-prod.yml
        - name: config-volume
          mountPath: /config-files/consumer-prod.yml
          subPath: consumer-prod.yml
      volumes:
      - name: config-volume
        persistentVolumeClaim:
          claimName: spring-config-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: configuration-server-service
spec:
  type: ClusterIP
  selector:
    app: configuration-server-app
  ports:
  - name: http-interface
    port: 8080
    targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: configuration-server-nodeport
spec:
  type: NodePort
  selector:
    app: configuration-server-app
  ports:
  - name: http-interface
    port: 8080
    targetPort: 8080
    nodePort: 30003

