apiVersion: apps/v1
kind: Deployment
metadata:
  name: producer-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: producer-app
  template:
    metadata:
      labels:
        app: producer-app
    spec:
      initContainers:
        - name: check-configuration-server
          image: appropriate/curl  # Imagen ligera con curl
          command: ['sh', '-c', 'until curl -f http://configuration-server-service:8080/producer/prod; do echo "Esperando a Configuration Server..."; sleep 2; done;']
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "64Mi"
              cpu: "100m"
      containers:
      - name: producer-container
        image: producer:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "1Gi"
            cpu: "800m"
        ports:
        - containerPort: 8080
        env:
        - name: JAVA_OPTS
          value: "-Xms256m -Xmx512m -XX:+UseG1GC -XX:+UseStringDeduplication"
        - name: CONFIGURATION_SERVER_ADDRESS
          value: http://configuration-server-service:8080
        startupProbe:
          httpGet:
            path: /produce
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 2
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: /produce
            port: 8080
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /produce
            port: 8080
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1

---

apiVersion: v1
kind: Service
metadata:
  name: producer-service
spec:
  type: ClusterIP
  selector:
    app: producer-app
  ports:
  - name: puerto-http
    protocol: TCP
    port: 8080
    targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: producer-service-nodeport
spec:
  type: NodePort
  selector:
    app: producer-app
  ports:
  - name: http-interface
    port: 8080
    targetPort: 8080
    nodePort: 30008


